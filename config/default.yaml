# ----------------------------------------------------------------------------------------
# If you're the only one using this skill, use the following options

# Where the homeserver is located (client-server URL). This should point at
# pantalaimon if you're using that.
homeserverUrl: "https://matrix.org"

# The access token for the bot to use. Do not populate if using Pantalaimon.
accessToken: "YOUR_TOKEN_HERE"

# Pantalaimon options (https://github.com/matrix-org/pantalaimon)
pantalaimon:
  # If true, accessToken above is ignored and the username/password below will be
  # used instead. The access token of the bot will be stored in the dataPath.
  use: false

  # The username to login with.
  username: your_username

  # The password to login with. Can be removed after the bot has logged in once and
  # stored the access token.
  password: your_password

# The directory the bot should store various bits of information in
dataPath: "/data/storage"

# ----------------------------------------------------------------------------------------
# If you expect to actually publish the skill for others to use, use the following options.
# Note: You'll need to ensure the dataPath above is set appropriately. It is used to store
# information about various accounts using the skill.
#
# !! Warning: These options are significantly more advanced

# Set this to true to disable single-user mode and instead host this for others.
hosted: false

# These are your client ID and secret from your OAuth system. In order to get credentials to
# the user's Matrix account, account linking needs be enabled in the Alexa Skill. This skill
# expects to be able to use matrix-oauth (https://github.com/turt2live/matrix-oauth) and as
# such the skill itself needs to know the credentials for the client so it can decrypt the
# access token.
#
# For account linking using matrix-oauth, be sure the settings match the right places:
# * Account linking is Optional.
# * Authorization URI points at /oauth/authorize for your matrix-oauth instance
# * Token URI points at /oauth/token for your matrix-oauth instance
# * Client ID and secret are the same as below, and in the matrix-oauth config
# * Authorization scheme is 'credentials in request body'
# * Scope is 'access_token'
# * No domains or expiration
# * Make sure your matrix-oauth config has the redirect URLs listed
#
# After all that, users will be able to link their Amazon Alexa account to their Matrix
# account, which the skill will automatically see.
clientId: your_client_id
clientSecret: your_client_secret
